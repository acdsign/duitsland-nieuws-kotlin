// Manifest version information!
def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 'git rev-list HEAD --count'.execute([], project.rootDir).text.trim().toInteger()

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.getkeepsafe.dexcount'

kapt {
    generateStubs = true
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/rxjava.properties'
    }

    defaultConfig {
        applicationId "io.supersimple.duitslandnieuws"
        minSdkVersion 23
        targetSdkVersion 25
        versionCode versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField 'String', 'GIT_SHA', "\"${gitSha()}\""
        buildConfigField 'long', 'GIT_TIMESTAMP', "${gitTimestamp()}L"
        buildConfigField 'boolean', 'GIT_CLEAN', "${gitIsClean()}"
        buildConfigField 'String', 'GIT_LOCAL_REF', "\"${gitLocalRef()}\""
        buildConfigField 'String', 'BUILD_TIME', "\"${buildTime()}\""

        manifestPlaceholders = [apiBaseUrl: "http://duitslandnieuws.nl/wp-json/wp/v2/"]

        if (travisBuild) {
            buildConfigField 'String', 'TRAVIS_BUILD_NR', '\"' + System.getenv("TRAVIS_BUILD_NUMBER") + '\"'
        }

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    dataBinding {
        enabled true
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        textReport true
        textOutput 'stdout'
        warning 'MissingTranslation'
        warning 'InvalidPackage'
    }

    signingConfigs {
        release {
            storeFile rootProject.file("duitsland-nieuws-release.keystore")
            storePassword System.getenv("KSTOREPWD")
            keyAlias "duitsland-nieuws-app"
            keyPassword System.getenv("KEYPWD")
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
        }
        qa {
            applicationIdSuffix '.qa'
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
        }
    }

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !travisBuild
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:appcompat-v7:$androidSupportVersion"
    compile "com.android.support:design:$androidSupportVersion"
    //
    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    // RxJava
    compile "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    compile "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"

    //Dagger 2
    compile "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // Requery persistency
    compile "io.requery:requery:$requeryVersion"
    compile "io.requery:requery-kotlin:$requeryVersion"
    compile "io.requery:requery-android:$requeryVersion"
    kapt "io.requery:requery-processor:$requeryVersion"

    // PaperParcel
    compile "nz.bradcampbell:paperparcel:$paperParcelVersion"
    compile "nz.bradcampbell:paperparcel-kotlin:$paperParcelVersion"
    kapt "nz.bradcampbell:paperparcel-compiler:$paperParcelVersion"

    // GSON
    compile "com.google.code.gson:gson:$rootProject.ext.gsonVersion"

    // OkHttpClient
    compile "com.squareup.okhttp3:okhttp:$okHttpVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    compile "com.squareup.retrofit2:retrofit:$retrofit2Version"
    compile "com.squareup.retrofit2:converter-gson:$retrofit2Version"
    compile "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$retrofit2RxJava2Version"

    //
    // SuperSimple
    compile "org.bitbucket.nxtapp.supersimpleandroid:simple-ui:$supersimpleVersion"

    // Picasso image loading
    compile "com.squareup.picasso:picasso:$picassoVersion"

    //
    // Test-only dependencies
    // Force usage of support annotations in the test app, since it is internally used by the runner module.
    androidTestCompile "com.android.support:support-annotations:$androidSupportVersion"
    androidTestCompile "com.android.support.test:runner:$androidSupportTest"
    // Set this dependency to use JUnit 4 rules
    androidTestCompile "com.android.support.test:rules:$androidSupportTest"
    // Espresso
    androidTestCompile "com.android.support.test.espresso:espresso-core:$espressoTestVersion"
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:$espressoTestVersion") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
    }
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$espressoTestVersion"

    testCompile "junit:junit:$junitVersion"
    //
    // UnitTest with Robolectric
    testCompile("org.robolectric:robolectric:$robolectricVersion") {
        exclude module: 'classworlds'
        exclude module: 'commons-logging'
        exclude module: 'httpclient'
        exclude module: 'maven-artifact'
        exclude module: 'maven-artifact-manager'
        exclude module: 'maven-error-diagnostics'
        exclude module: 'maven-model'
        exclude module: 'maven-project'
        exclude module: 'maven-settings'
        exclude module: 'plexus-container-default'
        exclude module: 'plexus-interpolation'
        exclude module: 'plexus-utils'
        exclude module: 'wagon-file'
        exclude module: 'wagon-http-lightweight'
        exclude module: 'wagon-provider-api'
    }

    // Mockito
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile ("com.nhaarman:mockito-kotlin:$mockitoKotlinVersion") {
        exclude group: 'org.mockito', module: 'mockito-core'
    }

    // OkHttpClient mocking
    testCompile "com.squareup.okhttp3:mockwebserver:$okHttpVersion"
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        //
        // Kotlin
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

dexcount {
    format = "list"
    includeClasses = false
    includeFieldCount = true
    includeTotalMethodCount = false
    orderByMethodCount = false
    verbose = false
    maxTreeDepth = Integer.MAX_VALUE
    teamCityIntegration = false
    enableForInstantRun = false
    teamCitySlug = null
    runOnEachAssemble = true
}
